
//函数体
//声明函数的关键字 fn ,函数名 add()，参数 x 和 y并且必须指定类型，参数类型和返回值类型都是 i32
//也可以使用 return 提前返回
fn add(x:i32, y:i32) -> i32 {
    // x + y ////返回值 表达式  
    if x + y > 10 {
        return 10
    }
    x+y
}


fn main() {
    //函数
    /*
        函数要点
            - 函数名和变量名使用蛇形命名法(snake case)，例如 fn add_two() -> {}
            - 函数的位置可以随便放，Rust 不关心我们在哪里定义了函数，只要有定义即可
            - 每个函数参数都需要标注类型
        无返回值：
            - 函数没有返回值，那么返回一个 ()
            - 通过 ; 结尾的语句返回一个 ()
        永不返回的发散函数 !
            当用 ! 作函数返回类型的时候，表示该函数永不返回( diverge function )，特别的，这种语法往往用做会导致程序崩溃的函数
    
     */
    let x = 5;
    let y = 6;
    let n:i32 = add(x,y);
    println!("Hello, world!,n = {}", n);
}